# 리스트(list) 자료형
# 여러개의 값(요소)을 변수 1개에 저장
# [1, 2, 3, 4, 5, 6, 7, 8, 9] 여러개(요소) 가능
# [1, 1, 1, 1, 1, 1] 똑같은 내용 반복가능
# ["Hello", "World", "Python"] 문자 가능
# [1, "Hello", 2, "WOW"] 숫자와 문자 섞기 가능
# [1, 2, ["Hello", "WOW"]] 대괄호 안에 대괄호 가능
# [] 아무것도 안넣기 가능

# li_1 = [1, 2, 3]
# print(li_1[0])
# print(li_1[1])
# print(li_1[2])
# print(li_1[-1])
# print(li_1[0] + li_1[1])
li_2 = [1, 2, 3, [4, 5, 6]]
# print(li_2[3][0])
# [[1, 2, 3],
# [4, 5, 6],
# [7, 8, 9]]
# print(li_2[2:3])
# print(li_2[1:])
# print(li_2[:2])
# print(li_2[3][0:2])
# 슬라이싱을 하면 리스트의 형태 [] 로 가져옴
li_3 = [1, 2, 3, 4, 5]
# 출력결과가 [2, 3]이 되도록 만드세요.
# print(li_3[1:3])
# print(li_3[100]) 범위를 벗어나서 에러
# print(len(li_3)) -> 원소가 5개니 5
# li_3을 [10, 2, 3, 4, 5] 로 변경 
# li_3[0] = 10
# print(li_3)
# print(li_3[1])
# print(li_2[3][0:1])

# append(원소)
# 리스트의 마지막에 원소를 추가
# li_4 = [1, 2, 3]
# li_4.append(4)
# li_4.append("문자")
# li_4.append([1, 2, 3])
# print(li_4)

# insert(인덱스 원소)
# 인덱스 위치에 원소 삽입
# li = [1, 2, 3]
# li.insert(1, 10) : 1번 위치 (2)에 10을 삽입힌다
# print(li) -> [1, 10, 2, 3]


# remove(값)
# 리스트에서 함수에 입력된 값과 같은 값을 찾아 삭제함
# li = [1, 2, 3]
# li.remove(2) -> 값(2)를 삭제한다
# print(li) -> [1, 3]
# 값이 여러개일시 먼저 나오는 값만 삭제함
# 리스트 값에 없는 값을 쓰면 에러가 나옴

# pop(인덱스)
# 리스트의 인덱스 위치의 요소를 꺼낸다
# 인덱스를 함수에 전달하지 않으면 제일 마지막 요소를 꺼낸다
# li = [1, 2, 3, 4]
# li.pop() = [1, 2, 3]
# print(li)
# # li.pop(1)
# print(li)
# b = li.pop(1)
# print(b) -> 2
# 꺼낸 값을 사용 가능하다

# index(값)
# 리스트에서 값을 찾아 그 값의 인덱스를 돌려준다.
# li = [1, 2, 3]
# print(li.index(2)) # 1
# # li[2] -> 인덱싱(인덱스로 값에 접근)
# # li.index(값)->인덱스 알아내기
# idx = li.index(2)
# print(idx)

# sort()
# 리스트의 요소를 정렬한다
# li = [5, 3, 1, 4, 2]
# li.sort()
# print(li) # [1, 2, 3, 4, 5] 오름차순 정렬
# li.sort(reverse = True) 
# print(li) # [5, 4, 3, 2, 1] 내림차순 정렬


#  reverse()
# 리스트의 순서를 뒤집는 함수
# 정렬 아님
# li = [5, 4, 3, 1, 2]
# li.reverse()
# print(li) # [2, 1, 3, 4, 5]
# 순서만 뒤집어서 나옴


# count (값)
# 리스트 안에서 해당 값이 몇개 있는지
# li = [1, 2, 3, 2]
# cnt = li.count(2)
# print(cnt) # 2 


#  + 연산자
#  리스트를 연결한다
#  entend 함수와 같다
# li_1 = [1, 2, 3]
# li_2 = [4, 5, 6]
# print(li_1 + li_2) # [1, 2, 3, 4, 5, 6]
# li_1.extend(li_2)
# print(li_1)

# * 연산자
# 리스트를 반복한다.
# li = [1, 2, 3]
# print(li * 3) # [1, 2, 3, 1, 2, 3, 1, 2, 3]

